"""
C. Гвоздики
Тренировки по алгоритмам 7.0 от Яндекса — Разминка
https://contest.yandex.ru/contest/74963/problems/C/

Ограничение времени	1 секунда
Ограничение памяти	64Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
В дощечке в один ряд вбиты гвоздики. Любые два гвоздика можно соединить ниточкой. Требуется соединить некоторые пары гвоздиков ниточками так, чтобы к каждому гвоздику была привязана хотя бы одна ниточка, а суммарная длина всех ниточек была минимальна.

Формат ввода
В первой строке входных данных записано число N — количество гвоздиков (2 ≤ N ≤ 100). В следующей строке заданы N чисел — координаты всех гвоздиков (неотрицательные целые числа, не превосходящие 10000).

Формат вывода
Выведите единственное число — минимальную суммарную длину всех ниточек.

Пример
Ввод	Вывод
6
3 13 12 4 14 6
5
"""
def minlength(n, array):
    # Сортируем массив для удобства вычисления разниц между соседними элементами
    array.sort()
    
    # Инициализируем первые два значения суммы для n=2
    sum0 = sum1 = array[1] - array[0]
    if (n == 2):
        return sum0  # Для случая с двумя элементами просто возвращаем разницу
    
    # Добавляем третье значение для n>=3
    sum1 += array[2] - array[1]
    
    # Динамическое программирование: вычисляем минимальную сумму для i-го элемента
    for i in range(3, n):
        cur = sum0  # Сохраняем предыдущее значение sum0
        sum0 = sum1  # Перемещаем sum1 в sum0
        # Выбираем минимальную сумму между двумя вариантами:
        # 1) Пропустить предыдущий элемент (cur)
        # 2) Взять предыдущий элемент (sum0)
        sum1 = min(cur + array[i] - array[i-1], sum0 + array[i] - array[i-1])
    
    # Возвращаем минимальную сумму для последних двух элементов
    return (min(sum0+array[-1] - array[-2], sum1))


# Ввод данных
n = int(input())  # Количество элементов в массиве
array = list(map(int, input().split()))  # Сам массив

# Проверяем, что массив не пустой и вызываем функцию
if n > 0:
    print(minlength(n, array))
